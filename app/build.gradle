apply plugin: 'com.android.application'
apply plugin: 'org.sonarqube'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.test.pwc.mydatabinding1"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

/*sonarqube {
    properties {
        property "sonar.projectName","My Data Binding"
        property "sonar.projectKey", "arun.app_reviewer"
        property sonar.version="1.0"
        property "sonar.sources" , "${project.buildDir}/app/src/main/java/"
        property "sonar.reportPath" , "${project.buildDir}/app/build/outputs/"
//        property "sonar.host.url", "http://localhost:9000"
//        property "sonar.language", "java"
//        property "sonar.login", "aruntest1001"
//        property "sonar.password", "qwe123.."
    }
}*/

sonarqube {
    //noinspection GroovyAssignabilityCheck
    properties {
        /* SonarQube needs to be informed about your libraries and the android.jar to understand that methods like
         * onResume() is called by the Android framework. Without that information SonarQube will very likely create warnings
         * that those methods are never used and they should be removed. Same applies for libraries where parent classes
         * are required to understand how a class works and is used. */
        def libraries = project.android.sdkDirectory.getPath() + "/platforms/android-22/android.jar," +
                "build/intermediates/exploded-aar/**/classes.jar"

        property "sonar.host.url", "http://localhost:9000"
        property "sonar.projectKey", "Arun.App_reviewer" // some shortcut name
        property "sonar.projectName", "My Data Binding"
        property "sonar.projectVersion", AppVersion

        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java,src/main/res"
        // first defines where the java files are, the second where the xml files are
        property "sonar.binaries", "build/intermediates/classes/${flavor}/debug"
        property "sonar.libraries", libraries
        property "sonar.java.binaries", "build/intermediates/classes/${flavor}/debug"
        property "sonar.java.libraries", libraries

        property "sonar.tests", "src/test/java" // where the tests are located
        property "sonar.java.test.binaries", "build/intermediates/classes/${flavor}/debug"
        property "sonar.java.test.libraries", libraries

        property "sonar.scm.provider", "git"

        property "sonar.jacoco.reportPath", "build/jacoco/test${Flavor}DebugUnitTest.exec"
        // path to coverage reports
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.junit.reportsPath", "build/test-results/${flavor}Debug"
        // path to junit reports
        property "sonar.android.lint.report", "build/outputs/lint-results-${flavor}Debug.xml"
        // path to lint reports
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
